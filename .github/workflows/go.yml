on: [push, pull_request]
name: Packman CI/CD
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Test
      env:
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
      run: go test ./...

  release-linux-amd64:
      name: release linux/amd64
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - name: Set up Go
          uses: actions/setup-go@v1
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v1
          with:
            version: latest
            args: release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GOARCH: amd64
            GOOS: linux
#    release-darwin-amd64:
#      name: release darwin/amd64
#      runs-on: ubuntu-latest
#      steps:
#        - uses: actions/checkout@master
#        - name: compile and release
#          uses: ngs/go-release.action@v1.0.1
#          env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#            GOARCH: amd64
#            GOOS: darwin
#    release-windows-amd64:
#      name: release windows/amd64
#      runs-on: ubuntu-latest
#      steps:
#        - uses: actions/checkout@master
#        - name: compile and release
#          uses: ngs/go-release.action@v1.0.1
#          env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#            GOARCH: amd64
#            GOOS: windows
#
